package lipid;

unit LipidScoreUnit;

import lipid.Annotation;
import lipid.Lipid;

// ——————————————————————————————
// Función auxiliar para ordenar tipos: PG < PE < PI < PA < PS < PC
// ——————————————————————————————
function int typeRank(String t) {
    if ("PG".equals(t)) return 1;
    if ("PE".equals(t)) return 2;
    if ("PI".equals(t)) return 3;
    if ("PA".equals(t)) return 4;
    if ("PS".equals(t)) return 5;
    if ("PC".equals(t)) return 6;
    return 0;
}

// —————— 1) EVIDENCIA POSITIVA ——————

// 1.a) Mismo tipo, mismas dobles, más carbonos ⇒ RT1 < RT2
rule "Positive: carbon count"
when
    $a1 : /annotations[ $rt1 : rtMin, $c1 : lipid.getCarbonCount(), $db : lipid.getDoubleBondsCount() ]
    $a2 : /annotations[ this != $a1,
                        lipid.getDoubleBondsCount() == $db,
                        lipid.getCarbonCount() > $c1,
                        $rt2 : rtMin,
                        eval($rt1 < $rt2) ]
then
    $a1.addScore(1);
    $a2.addScore(1);
end

// 1.b) Mismo tipo, mismo C, más dobles ⇒ RT1 > RT2
rule "Positive: double bonds"
when
    $a1 : /annotations[ $rt1 : rtMin, $c : lipid.getCarbonCount(), $db1 : lipid.getDoubleBondsCount(), $t : lipid.getLipidType() ]
    $a2 : /annotations[ this != $a1,
                        lipid.getLipidType() == $t,
                        lipid.getCarbonCount() == $c,
                        lipid.getDoubleBondsCount() > $db1,
                        $rt2 : rtMin,
                        eval($rt1 > $rt2) ]
then
    $a1.addScore(1);
    $a2.addScore(1);
end

// 1.c) Mismo C y mismas dobles, distinto tipo ⇒ typeRank lógicamente ordena RT
rule "Positive: type order"
when
    $a1 : /annotations[ $rt1 : rtMin, $c : lipid.getCarbonCount(), $db : lipid.getDoubleBondsCount(), $t1 : lipid.getLipidType() ]
    $a2 : /annotations[ this != $a1,
                        lipid.getCarbonCount() == $c,
                        lipid.getDoubleBondsCount() == $db,
                        $t2 : lipid.getLipidType(),
                        eval(typeRank($t1) < typeRank($t2)),
                        $rt2 : rtMin,
                        eval($rt1 < $rt2) ]
then
    $a1.addScore(1);
    $a2.addScore(1);
end

// —————— 2) EVIDENCIA NEGATIVA ——————

// 2.a) Mismo tipo, mismas dobles, más carbonos, pero RT1 > RT2
rule "Negative: carbon count"
when
    $a1 : /annotations[ $rt1 : rtMin, $c1 : lipid.getCarbonCount(), $db : lipid.getDoubleBondsCount() ]
    $a2 : /annotations[ this != $a1,
                        lipid.getDoubleBondsCount() == $db,
                        lipid.getCarbonCount() > $c1,
                        $rt2 : rtMin,
                        eval($rt1 > $rt2) ]
then
    $a1.addScore(-1);
    $a2.addScore(-1);
end

// 2.b) Mismo tipo, mismo C, más dobles, pero RT1 < RT2
rule "Negative: double bonds"
when
    $a1 : /annotations[ $rt1 : rtMin, $c : lipid.getCarbonCount(), $db1 : lipid.getDoubleBondsCount(), $t : lipid.getLipidType() ]
    $a2 : /annotations[ this != $a1,
                        lipid.getLipidType() == $t,
                        lipid.getCarbonCount() == $c,
                        lipid.getDoubleBondsCount() > $db1,
                        $rt2 : rtMin,
                        eval($rt1 < $rt2) ]
then
    $a1.addScore(-1);
    $a2.addScore(-1);
end

// 2.c) Mismo C y mismas dobles, distinto tipo, pero RT1 > RT2
rule "Negative: type order"
when
    $a1 : /annotations[ $rt1 : rtMin, $c : lipid.getCarbonCount(), $db : lipid.getDoubleBondsCount(), $t1 : lipid.getLipidType() ]
    $a2 : /annotations[ this != $a1,
                        lipid.getCarbonCount() == $c,
                        lipid.getDoubleBondsCount() == $db,
                        $t2 : lipid.getLipidType(),
                        eval(typeRank($t1) < typeRank($t2)),
                        $rt2 : rtMin,
                        eval($rt1 > $rt2) ]
then
    $a1.addScore(-1);
    $a2.addScore(-1);
end

